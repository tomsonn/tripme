#:kivy 2.0.0
#:import hex kivy.utils.get_color_from_hex
#:import colors __main__.colors

##### LABEL PART #####

<Label>:
    color: colors["paletteTextPrimary"]

<InputLabel@Label>:
    size_hint: .6, .03
    text_size: self.size
    font_name: "fonts/OpenSans-Regular.ttf"

<InvalidFormatLabel@InputLabel>:
    color: colors["paletteRedNormal"]
    font_size: 20
    valign: "top"
    haligh: "left"

<DescriptionLabel@Label>:
    pos_hint: {"x": .2, "top": 1}
    size_hint: .6, .17
    text_size: self.size
    font_size: 55
    font_name: "fonts/OpenSans-Bold.ttf"
    halign: "center"
    valign: "center"

<GreetingLabel@Label>:
    size_hint: .9, .1
    pos_hint: {"x": .05, "top": 1}
    text_size: self.size
    font_size: 30
    font_name: "fonts/WorkSans-Regular.ttf"
    halign: "center"
    valign: "center"

##### END OF LABEL PART #####

##### TEXTINPUT PART #####

<TextInput>:
    size_hint: .6, .05
    multiline: False
    font_size: 28
    default_color: True
    background_active: ""
    background_normal: ""
    foreground_color: colors["paletteInkLight"] if self.default_color else colors["paletteInkNormal"]
    background_color: colors["paletteCloudLight"]
    padding: [10, (self.height-self.line_height) / 2]
    canvas.before:
        Line:
            width: 1.8 if self.focus else 1.5
            points: [self.x, self.y, self.right, self.y]

##### END OF TEXTINPUT PART #####

##### BUTTON PART #####

<RoundedButton@Button>:
    font_size: 32
    font_name: "fonts/OpenSans-Regular.ttf"
    background_color: 0, 0, 0, 0
    background_normal: ""
    back_color: 0, 0, 0, 0
    canvas.before:
        Color:
            rgba: self.back_color
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [15]

<ExitButton@Button>:
    size_hint: None, None
    width: 100 if self.state == "normal" else 120
    height: 100 if self.state == "normal" else 120
    pos_hint: {"x": .05, "y": ((.05 * root.width) / root.height)}
    background_color: hex("#00000000")
    canvas.before:
        RoundedRectangle:
            source: "drawable/exit_btn.png"
            size: self.size
            pos: self.pos
            radius: [20]
    on_release:
        app.stop()

##### END OF BUTTON PART #####

##### SCREEN PART #####

<Screen>:
    canvas.before:
        Color:
            rgba: colors["paletteCloudLight"]

        Rectangle:
            pos: self.pos
            size: self.size

<LoginScreen@Screen>:
    name: "login"
    id: login_screen

    login_email: login_email
    login_password: login_password

    FloatLayout:
        cols: 1

        DescriptionLabel:
            text: "Login"

        InputLabel:
            text: "Email"
            pos_hint: {"x": .2, "top": .83}
            font_size: 24
            halign: "left"
            valign: "bottom"

        InputLabel:
            text: "Password"
            pos_hint: {"x": .2, "top": .69}
            font_size: 24
            halign: "left"
            valign: "bottom"

        InputLabel:
            text: "- or -"
            pos_hint: {"x": .2, "top": .335} 
            font_name: "fonts/Ubuntu-MediumItalic.ttf"
            halign: "center"
            valign: "center" 

        TextInput:
            id: login_email
            text: "Type your Email"
            pos_hint: {"x": .2, "top": .78}
        
        TextInput:
            id: login_password
            password: True if self.text != "Type your Password" else False
            text: "Type your Password"
            pos_hint: {"x": .2, "top": .64}

        RoundedButton:
            size_hint: (.6, .06) if self.state == "normal" else (.62, .08)
            pos_hint: {"x": .2, "top": .5} if self.state == "normal" else {"x": .19, "top": .51}
            text: "Sign in with Email"
            back_color: colors["paletteProductDark"] if self.state == "normal" else colors["paletteProductNormal"]
            color: colors["paletteCloudLight"]
            
        RoundedButton:
            size_hint: (.6, .06) if self.state == "normal" else (.62, .08)
            pos_hint: {"x": .2, "top": .42} if self.state == "normal" else {"x": .19, "top": .43}
            text: "Continue as Guest"
            back_color: colors["paletteOrangeDark"] if self.state == "normal" else colors["paletteOrangeNormal"]
            color: colors["paletteCloudLight"]
            on_release:
                root.proceed_to_search_screen()

        RoundedButton:
            size_hint: (.6, .06) if self.state == "normal" else (.62, .08)
            pos_hint: {"x": .2, "top": .28} if self.state == "normal" else {"x": .19, "top": .29}
            text: "Create an free account"
            back_color: colors["paletteProductDark"] if self.state == "normal" else colors["paletteProductNormal"]
            color: colors["paletteCloudLight"]
            on_release: 
                root.proceed_to_create_acc_screen()

        ExitButton:

<CreateAccountScreen@Screen>:
    name: "createAccount"
    id: create_account

    create_acc_username: create_acc_username
    create_acc_email: create_acc_email
    create_acc_password: create_acc_password

    canvas.before:
        Color:
            rgba: colors["paletteCloudLight"]
        Rectangle:
            pos: self.pos
            size: self.size

    FloatLayout:
        DescriptionLabel:
            text: "Register"

        InputLabel:
            text: "Username"
            pos_hint: {"x": .2, "top": .83}
            font_size: 24
            halign: "left"
            valign: "bottom"

        InputLabel:
            text: "Email"
            pos_hint: {"x": .2, "top": .69}
            font_size: 24
            halign: "left"
            valign: "bottom"

        InputLabel:
            text: "Password"
            pos_hint: {"x": .2, "top": .55}
            font_size: 24
            halign: "left"
            valign: "bottom"

        Label:
            text: "Already have an account? [ref=login][color=007F6D][size=30][font=fonts/WorkSans-SemiBold]Login[/font][/size][/color][/ref] instead."
            markup: True
            size_hint: .6, .1
            pos_hint: {"x": .2, "top": .275}
            halign: "center"
            valign: "center"
            font_size: 28
            text_size: self.size
            font_name: "fonts/WorkSans-Regular.ttf"
            on_ref_press:
                root.proceed_to_login_screen()

        TextInput:
            id: create_acc_username
            text: "Type your Username"
            pos_hint: {"x": .2, "top": .78}
        
        TextInput:
            id: create_acc_email
            text: "Type your Email"
            pos_hint: {"x": .2, "top": .64}

        TextInput:
            id: create_acc_password
            password: True if self.text != "Type your Password" else False
            text: "Type your Password"
            pos_hint: {"x": .2, "top": .5}

        RoundedButton:
            size_hint: (.2, .06) if self.state == "normal" else (.22, .08)
            pos_hint: {"x": .25, "top": .4} if self.state == "normal" else {"x": .24, "top": .41}
            text: "Submit"
            back_color: colors["paletteProductDark"] if self.state == "normal" else colors["paletteProductNormal"]
            color: colors["paletteCloudLight"]

        RoundedButton:
            size_hint: (.2, .06) if self.state == "normal" else (.22, .08)
            pos_hint: {"right": .75, "top": .4} if self.state == "normal" else {"right": .76, "top": .41}
            text: "Clear"
            back_color: colors["paletteRedDark"] if self.state == "normal" else colors["paletteRedNormal"]
            color: colors["paletteCloudLight"]
            on_release:
                root.clear_form()

        ExitButton:

<SearchScreen@Screen>:
    name: "search"
    id: search_screen

    dept_place: dept_place
    dept_date: dept_date
    arr_dest: arr_dest

    FloatLayout:
        GreetingLabel:
            text: "Hello! Currently logged in as [font=fonts/WorkSans-SemiBold]User[/font]."
            markup: True

        DescriptionLabel:
            text: "Find your trip!"
            pos_hint: {"x": .05, "top": .9}
            size_hint: .9, .12
            valign: "top"

        InputLabel:
            text: "From"
            pos_hint: {"x": .2, "top": .78}
            font_size: 24
            halign: "left"
            valign: "bottom"
            color: colors["paletteTextPrimary"] if not root.dept_place.is_empty else colors["paletteRedNormal"]

        InputLabel:
            text: "To"
            pos_hint: {"x": .2, "top": .64}
            font_size: 24
            halign: "left"
            valign: "bottom"
            color: colors["paletteTextPrimary"] if not root.arr_dest.is_empty else colors["paletteRedNormal"]

        InputLabel:
            text: "Departure date"
            pos_hint: {"x": .2, "top": .5}
            font_size: 24
            halign: "left"
            valign: "bottom"
            color: colors["paletteTextPrimary"] if not root.dept_date.invalid_format else colors["paletteRedNormal"]

        InvalidFormatLabel:
            text: "Departure place field can not be empty."
            pos_hint: {"x": .2, "top": .68} 
            opacity: 1 if root.dept_place.is_empty else 0

        InvalidFormatLabel:
            text: "Arrival destination field can not be empty."
            pos_hint: {"x": .2, "top": .54} 
            opacity: 1 if root.arr_dest.is_empty else 0

        InvalidFormatLabel:
            text: "Departure date is empty or in wrong format."
            pos_hint: {"x": .2, "top": .4} 
            opacity: 1 if root.dept_date.invalid_format else 0

        TextInput:
            id: dept_place
            is_empty: False
            text: "Type your departure place"
            pos_hint: {"x": .2, "top": .74}
            canvas.before:
                Color:
                    rgba: colors["paletteRedNormal"] if self.is_empty else self.foreground_color
                Line:
                    width: 1.8 if self.focus else 1.5
                    points: [self.x, self.y, self.right, self.y]
        
        TextInput:
            id: arr_dest
            is_empty: False
            text: "Type your arrival destination"
            pos_hint: {"x": .2, "top": .6}
            canvas.before:
                Color:
                    rgba: colors["paletteRedNormal"] if self.is_empty else self.foreground_color
                Line:
                    width: 1.8 if self.focus else 1.5
                    points: [self.x, self.y, self.right, self.y]

        TextInput:
            id: dept_date
            invalid_format: False
            text: "DD/MM/YYYY"
            pos_hint: {"x": .2, "top": .46}
            canvas.before:
                Color:
                    rgba: colors["paletteRedNormal"] if self.invalid_format else self.foreground_color
                Line:
                    width: 1.8 if self.focus else 1.5
                    points: [self.x, self.y, self.right, self.y]

        RoundedButton:
            size_hint: (.2, .06) if self.state == "normal" else (.22, .08)
            pos_hint: {"x": .25, "top": .35} if self.state == "normal" else {"x": .24, "top": .36}
            text: "Search"
            back_color: colors["paletteProductDark"] if self.state == "normal" else colors["paletteProductNormal"]
            color: colors["paletteCloudLight"]
            on_release:
                root.parse_date(root.dept_date.text)
                root.validate_inputs()

        RoundedButton:
            size_hint: (.2, .06) if self.state == "normal" else (.22, .08)
            pos_hint: {"right": .75, "top": .35} if self.state == "normal" else {"right": .76, "top": .36}
            text: "Clear"
            back_color: colors["paletteRedDark"] if self.state == "normal" else colors["paletteRedNormal"]
            color: colors["paletteCloudLight"]
            on_release:
                root.clear_form()

        ExitButton:

<ResultsScreen>:
    name: "results"
    id: result_screen

##### END OF SCREEN PART #####